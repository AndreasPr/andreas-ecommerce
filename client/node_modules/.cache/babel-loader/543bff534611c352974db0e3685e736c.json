{"ast":null,"code":"import ShopActionTypes from './shop.types'; //This action switches our reducers isFetching state \n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n}); //This is the actual function that we pass into components to begin this process\n\nexport const fetchCollectionsStartAsync = () => {\n  // Return the function that gets a dispatch\n  return dispatch => {\n    const collectionRef = firestore.collection('collections'); // --------- Promise Pattern ---------------\n\n    collectionRef.get().then(snapShot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapShot); //updateCollections(collectionsMap);\n\n      this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/React Projects/andreas-ecommerce/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsStartAsync","dispatch","collectionRef","firestore","collection","get","then","snapShot","collectionsMap","convertCollectionsSnapshotToMap","setState","loading"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B,C,CAEA;;AACA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADkB,CAAP,CAA9B,C,CAIP;;AACA,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC5C;AACA,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,aAArB,CAAtB,CADe,CAGf;;AACAF,IAAAA,aAAa,CAACG,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMC,cAAc,GAAGC,+BAA+B,CAACF,QAAD,CAAtD,CADiC,CAEjC;;AACA,WAAKG,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAJD;AAKH,GATD;AAUH,CAZM","sourcesContent":["import ShopActionTypes from './shop.types';\r\n\r\n//This action switches our reducers isFetching state \r\nexport const fetchCollectionsStart = () => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\n//This is the actual function that we pass into components to begin this process\r\nexport const fetchCollectionsStartAsync = () => {\r\n    // Return the function that gets a dispatch\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection('collections');\r\n\r\n        // --------- Promise Pattern ---------------\r\n        collectionRef.get().then(snapShot => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\r\n            //updateCollections(collectionsMap);\r\n            this.setState({loading: false});\r\n        });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}