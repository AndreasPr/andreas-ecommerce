{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Projects\\\\andreas-ecommerce\\\\client\\\\src\\\\components\\\\error-boundary\\\\error-boundary.component.jsx\";\nimport React from 'react';\nimport { ErrorImageOverlay, ErrorImageContainer, ErrorImageText } from './error-boundary.styles';\n\nclass ErrorBoundary extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      hasErrored: false\n    };\n  } // LifeCycle method - If any children of ErrorBoundary throw an error, ErrorBoundary is going to catch that error.  \n\n\n  static getDerivedStateFromError(error) {\n    return {\n      hasErrored: true\n    };\n  } // LifeCycle method\n\n\n  componentDidCatch(error, info) {\n    console.log(error);\n  }\n\n  render() {\n    if (this.state.hasErrored) {\n      return /*#__PURE__*/React.createElement(ErrorImageOverlay, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ErrorImageContainer, {\n        imageUrl: \"https://i.imgur.com/Q2BAOd2.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 19\n        }\n      }));\n    }\n\n    return this.props.children;\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["C:/React Projects/andreas-ecommerce/client/src/components/error-boundary/error-boundary.component.jsx"],"names":["React","ErrorImageOverlay","ErrorImageContainer","ErrorImageText","ErrorBoundary","Component","constructor","state","hasErrored","getDerivedStateFromError","error","componentDidCatch","info","console","log","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,iBAAR,EAA2BC,mBAA3B,EAAgDC,cAAhD,QAAqE,yBAArE;;AAEA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA2C;AACvCC,EAAAA,WAAW,GAAE;AACT;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb;AAGH,GAPsC,CASvC;;;AACA,SAAOC,wBAAP,CAAgCC,KAAhC,EAAsC;AAElC,WAAO;AAACF,MAAAA,UAAU,EAAE;AAAb,KAAP;AACH,GAbsC,CAevC;;;AACAG,EAAAA,iBAAiB,CAACD,KAAD,EAAQE,IAAR,EAAa;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH;;AAEDK,EAAAA,MAAM,GAAE;AACJ,QAAG,KAAKR,KAAL,CAAWC,UAAd,EAAyB;AACrB,0BACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,mBAAD;AAAqB,QAAA,QAAQ,EAAC,iCAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADF;AAKH;;AACD,WAAO,KAAKQ,KAAL,CAAWC,QAAlB;AACH;;AA7BsC;;AAgC3C,eAAeb,aAAf","sourcesContent":["import React from 'react';\r\nimport {ErrorImageOverlay, ErrorImageContainer, ErrorImageText} from './error-boundary.styles';\r\n\r\nclass ErrorBoundary extends React.Component{\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            hasErrored: false\r\n        }\r\n    }\r\n\r\n    // LifeCycle method - If any children of ErrorBoundary throw an error, ErrorBoundary is going to catch that error.  \r\n    static getDerivedStateFromError(error){\r\n\r\n        return {hasErrored: true};\r\n    }\r\n\r\n    // LifeCycle method\r\n    componentDidCatch(error, info){\r\n        console.log(error);\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasErrored){\r\n            return (\r\n              <ErrorImageOverlay>\r\n                  <ErrorImageContainer imageUrl='https://i.imgur.com/Q2BAOd2.png'/>\r\n              </ErrorImageOverlay>  \r\n            );\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;"]},"metadata":{},"sourceType":"module"}