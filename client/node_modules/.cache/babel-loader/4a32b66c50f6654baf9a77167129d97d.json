{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Projects\\\\andreas-ecommerce\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Password doesn't match with Confirm Password!\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(SignUpContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SignUpTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"I don't have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Sign Up with your Email and Password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"SIGN UP\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/React Projects/andreas-ecommerce/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUpContainer","SignUpTitle","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {connect}  from 'react-redux';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport {signUpStart} from '../../redux/user/user.actions';\r\nimport {SignUpContainer, SignUpTitle} from './sign-up.styles';\r\n\r\nconst SignUp = ({signUpStart}) => {\r\n    const [userCredentials, setUserCredentials] = useState({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n    const {displayName, email, password, confirmPassword} = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n    \r\n        if(password !== confirmPassword){\r\n            alert(\"Password doesn't match with Confirm Password!\") ;\r\n            return;\r\n        }\r\n        signUpStart({displayName, email, password});\r\n\r\n    };\r\n\r\n    const handleChange = event =>{\r\n        const {value, name} = event.target;\r\n        setUserCredentials({...userCredentials, [name]:value });\r\n    };\r\n    \r\n    return(\r\n        <SignUpContainer>\r\n            <SignUpTitle>I don't have an account</SignUpTitle>\r\n            <span>Sign Up with your Email and Password</span>\r\n            <form className='sign-up-form' onSubmit={handleSubmit}>\r\n                <FormInput type='text' name='displayName' \r\n                value={displayName} onChange={handleChange} label='Display Name' required />\r\n                <FormInput type='email' name='email' \r\n                value={email} onChange={handleChange} label='Email' required />\r\n                <FormInput type='password' name='password' \r\n                value={password} onChange={handleChange} label='Password' required />\r\n                <FormInput type='password' name='confirmPassword' \r\n                value={confirmPassword} onChange={handleChange} label='Confirm Password' required />\r\n                \r\n                <div className='buttons'>\r\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\r\n                </div>\r\n            </form>\r\n        </SignUpContainer>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials))\r\n})\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}