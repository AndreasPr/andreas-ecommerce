{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Projects\\\\andreas-ecommerce\\\\src\\\\components\\\\cart-dropdown\\\\cart-dropdown.component.jsx\";\nimport React from 'react';\nimport './cart-dropdown.styles.scss';\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { connect } from 'react-redux';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { CartdropdownContainer, CartitemsStyles, EmptymessageStyles, CheckoutButtonStyles } from './cart-dropdown.styles';\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => /*#__PURE__*/React.createElement(CartdropdownContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(CartitemsStyles, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }\n}, cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 21\n  }\n})) : /*#__PURE__*/React.createElement(EmptymessageStyles, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 17\n  }\n}, \"Your cart is empty\")), /*#__PURE__*/React.createElement(CustomButton, {\n  onClick: () => {\n    history.push('/checkout');\n    dispatch(toggleCartHidden());\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["C:/React Projects/andreas-ecommerce/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","CustomButton","CartItem","connect","selectCartItems","createStructuredSelector","withRouter","toggleCartHidden","CartdropdownContainer","CartitemsStyles","EmptymessageStyles","CheckoutButtonStyles","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,6BAAP;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,eAAR,QAA8B,iCAA9B;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;AACA,SAAQC,qBAAR,EAA+BC,eAA/B,EAAgDC,kBAAhD,EAAoEC,oBAApE,QAA+F,wBAA/F;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,kBACjB,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEQF,SAAS,CAACG,MAAV,GAEAH,SAAS,CAACI,GAAV,CAAcC,QAAQ,iBAClB,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CAFA,gBAMA,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARR,CADJ,eAYI,oBAAC,YAAD;AAAc,EAAA,OAAO,EAAE,MAAM;AAACJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AAA2BL,IAAAA,QAAQ,CAACR,gBAAgB,EAAjB,CAAR;AAA8B,GAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZJ,CADJ;;AAkBA,MAAMc,eAAe,GAAGhB,wBAAwB,CAAE;AAC9CQ,EAAAA,SAAS,EAAET;AADmC,CAAF,CAAhD;AAIA,eAAeE,UAAU,CAACH,OAAO,CAACkB,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport './cart-dropdown.styles.scss';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport CartItem from '../cart-item/cart-item.component';\r\nimport {connect} from 'react-redux';\r\nimport {selectCartItems} from '../../redux/cart/cart.selectors';\r\nimport {createStructuredSelector} from 'reselect';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {toggleCartHidden} from '../../redux/cart/cart.actions';\r\nimport {CartdropdownContainer, CartitemsStyles, EmptymessageStyles, CheckoutButtonStyles} from './cart-dropdown.styles';\r\n\r\nconst CartDropdown = ({cartItems, history, dispatch}) => (\r\n    <CartdropdownContainer>\r\n        <CartitemsStyles>\r\n            {\r\n                cartItems.length \r\n                ?\r\n                cartItems.map(cartItem => (\r\n                    <CartItem key={cartItem.id} item={cartItem} />\r\n                ))\r\n                :\r\n                <EmptymessageStyles>Your cart is empty</EmptymessageStyles>\r\n            }\r\n        </CartitemsStyles>\r\n        <CustomButton onClick={() => {history.push('/checkout'); dispatch(toggleCartHidden());}}>\r\n            GO TO CHECKOUT</CustomButton>\r\n    </CartdropdownContainer>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector ({\r\n    cartItems: selectCartItems\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}