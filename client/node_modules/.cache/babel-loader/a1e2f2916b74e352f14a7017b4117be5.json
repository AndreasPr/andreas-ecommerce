{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Projects\\\\andreas-ecommerce\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react'; //import './sign-in.styles.scss';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { SignInContainer, SignInButtons } from './sign-in.styles';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(SignInContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"I already have an account \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      required: true,\n      label: \"email\",\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      required: true,\n      label: \"password\",\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(SignInButtons, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/React Projects/andreas-ecommerce/src/components/sign-in/sign-in.component.jsx"],"names":["React","FormInput","CustomButton","SignInContainer","SignInButtons","googleSignInStart","emailSignInStart","connect","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\n//import './sign-in.styles.scss';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport {SignInContainer, SignInButtons} from './sign-in.styles';\r\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions';\r\nimport {connect} from 'react-redux';\r\n\r\nclass SignIn extends React.Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const {emailSignInStart} = this.props;\r\n        const {email, password} = this.state;\r\n        emailSignInStart(email, password);\r\n    };\r\n\r\n    handleChange = event => {\r\n        const {value, name} = event.target;\r\n        this.setState({ [name]:value });\r\n    };\r\n\r\n    render(){\r\n        const {googleSignInStart} = this.props;\r\n        return(\r\n            <SignInContainer>\r\n                <h2>I already have an account </h2>\r\n                <span>Sign in with your email and password</span>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput name='email' \r\n                        type='email' \r\n                        value={this.state.email} \r\n                        required \r\n                        label='email'\r\n                        handleChange={this.handleChange}/>\r\n                    \r\n                    <FormInput \r\n                        name='password' \r\n                        type='password' \r\n                        value={this.state.password} \r\n                        required \r\n                        label='password'\r\n                        handleChange={this.handleChange} />\r\n                    <SignInButtons>\r\n                        <CustomButton type='submit'>Sign in</CustomButton>\r\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>Sign in with Google</CustomButton>\r\n                    </SignInButtons>\r\n                </form>\r\n            </SignInContainer>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}