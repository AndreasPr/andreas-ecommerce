{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Projects\\\\andreas-ecommerce\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { SignInContainer, SignInButtons } from './sign-in.styles';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(SignInContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, \"I already have an account \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    required: true,\n    label: \"email\",\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    label: \"password\",\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(SignInButtons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/React Projects/andreas-ecommerce/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","FormInput","CustomButton","SignInContainer","SignInButtons","googleSignInStart","emailSignInStart","connect","SignIn","userCredentials","setUserCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport {SignInContainer, SignInButtons} from './sign-in.styles';\r\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions';\r\nimport {connect} from 'react-redux';\r\n\r\nconst SignIn  = ({emailSignInStart, googleSignInStart}) => {\r\n    const [userCredentials, setUserCredentials] = useState({email: '', password: ''});\r\n    const {email, password} = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        emailSignInStart(email, password);\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const {value, name} = event.target;\r\n        setUserCredentials({ ...userCredentials, [name]:value });\r\n    };\r\n\r\n        return(\r\n            <SignInContainer>\r\n                <h2>I already have an account </h2>\r\n                <span>Sign in with your email and password</span>\r\n                <form onSubmit={handleSubmit}>\r\n                    <FormInput name='email' \r\n                        type='email' \r\n                        value={email} \r\n                        required \r\n                        label='email'\r\n                        handleChange={handleChange}/>\r\n                    \r\n                    <FormInput \r\n                        name='password' \r\n                        type='password' \r\n                        value={password} \r\n                        required \r\n                        label='password'\r\n                        handleChange={handleChange} />\r\n                    <SignInButtons>\r\n                        <CustomButton type='submit'>Sign in</CustomButton>\r\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>Sign in with Google</CustomButton>\r\n                    </SignInButtons>\r\n                </form>\r\n            </SignInContainer>\r\n        );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}