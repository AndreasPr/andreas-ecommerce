{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n  const collectionRef = firestore.collection('collections');\n  const snapShot = yield collectionRef.get(); // Begins the Asynchronous request...\n  // collectionRef.get().then(snapShot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\n  //     // Dispatch this success once this asynchronous request resolved \n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  // }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/React Projects/andreas-ecommerce/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapShot","get","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,oBAAxB;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,gBAA/D;AAEA,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB,CAJoC,CAUhC;AACA;AACA;AAEA;AACA;AACA;AACP;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMb,SAAS,CAACC,eAAe,CAACa,uBAAjB,EAA0CR,qBAA1C,CAAf;AACH","sourcesContent":["import {takeEvery} from 'redux-saga/effects';\r\nimport ShopActionTypes from './shop.types';\r\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\nimport {fetchCollectionsSuccess, fetchCollectionsFailure} from './shop.actions';\r\n\r\nexport function* fetchCollectionsAsync(){\r\n    yield console.log('I am fired');\r\n\r\n    const collectionRef = firestore.collection('collections');\r\n    const snapShot = yield collectionRef.get();\r\n      \r\n\r\n\r\n\r\n\r\n        // Begins the Asynchronous request...\r\n        // collectionRef.get().then(snapShot => {\r\n        //     const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\r\n\r\n        //     // Dispatch this success once this asynchronous request resolved \r\n        //     dispatch(fetchCollectionsSuccess(collectionsMap));\r\n        // }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart(){\r\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\r\n}"]},"metadata":{},"sourceType":"module"}