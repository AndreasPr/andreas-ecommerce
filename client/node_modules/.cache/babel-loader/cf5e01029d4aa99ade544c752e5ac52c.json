{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Projects\\\\andreas-ecommerce\\\\client\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React, { useEffect, lazy, Suspense } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions'; // import CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\n// import CollectionPageContainer from '../collection/collection.container';\n\nconst CollectionsOverviewContainer = lazy(() => import('../../components/collections-overview/collections-overview.container'));\nconst CollectionPageContainer = lazy(() => import('../collection/collection.container'));\n\nconst ShopPage = ({\n  fetchCollectionsStart,\n  match\n}) => {\n  useEffect(() => {\n    // Good pattern to fire off our API requests inside of componentDidMount\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverviewContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/React Projects/andreas-ecommerce/client/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","lazy","Suspense","Route","connect","fetchCollectionsStart","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,IAA1B,EAAgCC,QAAhC,QAA+C,OAA/C;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,qBAAR,QAAoC,+BAApC,C,CACA;AACA;;AAEA,MAAMC,4BAA4B,GAAGL,IAAI,CAAC,MAAM,OAAO,sEAAP,CAAP,CAAzC;AACA,MAAMM,uBAAuB,GAAGN,IAAI,CAAC,MAAM,OAAO,oCAAP,CAAP,CAApC;;AAGA,MAAMO,QAAQ,GAAG,CAAC;AAACH,EAAAA,qBAAD;AAAwBI,EAAAA;AAAxB,CAAD,KAAoC;AAEhDT,EAAAA,SAAS,CAAC,MAAM;AACb;AACAK,IAAAA,qBAAqB;AACvB,GAHQ,EAGN,CAACA,qBAAD,CAHM,CAAT;AAKG,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEI,KAAK,CAACC,IAAK,EAAjC;AACA,IAAA,SAAS,EAAEJ,4BADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,gBAA3B;AACA,IAAA,SAAS,EAAEH,uBADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAiBP,CAxBD;;AA0BA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACpCP,EAAAA,qBAAqB,EAAE,MAAMO,QAAQ,CAACP,qBAAqB,EAAtB;AADD,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOO,kBAAP,CAAP,CAAkCH,QAAlC,CAAf","sourcesContent":["import React, {useEffect, lazy, Suspense} from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {fetchCollectionsStart} from '../../redux/shop/shop.actions';\r\n// import CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\r\n// import CollectionPageContainer from '../collection/collection.container';\r\n\r\nconst CollectionsOverviewContainer = lazy(() => import('../../components/collections-overview/collections-overview.container'));\r\nconst CollectionPageContainer = lazy(() => import('../collection/collection.container'));\r\n\r\n\r\nconst ShopPage = ({fetchCollectionsStart, match}) => {\r\n\r\n     useEffect(() => {\r\n        // Good pattern to fire off our API requests inside of componentDidMount\r\n        fetchCollectionsStart();\r\n     }, [fetchCollectionsStart]);\r\n\r\n        return(\r\n            <div className='shop-page'>\r\n                <Route exact path={`${match.path}`} \r\n                component={CollectionsOverviewContainer} />\r\n                <Route path={`${match.path}/:collectionId`} \r\n                component={CollectionPageContainer} />\r\n            \r\n            {/* When you use the component props, the router uses React.createElement to create a new React element\r\n            from the given component. That means if you provide an inline function to the component attribute, you \r\n            would create a new component every render. This results in the existing \r\n            component unmounting and the new component mounting instead of just updating the existing component.\r\n            \r\n            So, if you need to pass a prop (In our case \"loading\") to a component being rendered by React Router,\r\n            instead of using Routes component prop, use its render prop passing it an inline function then \r\n            pass along the arguments to the element youâ€™re creating. */}\r\n            </div>\r\n        );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}